import React, { useState } from 'react';
import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';
import { Button, Card, Typography } from "@material-tailwind/react";
// Mock report data
const reportsData = [
  { id: 1, type: 'Sales Report', date: '2025-02-27', generatedBy: 'Admin', status: 'Completed' },
  { id: 2, type: 'User Activity Report', date: '2025-03-03', generatedBy: 'Admin', status: 'Completed' },
  { id: 3, type: 'Product Performance Report', date: '2023-03-10', generatedBy: 'Admin', status: 'Pending' },
];

export function AdminReports() {
  const [selectedReportType, setSelectedReportType] = useState('Sales Report');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [reports, setReports] = useState(reportsData);

  // Handle generating a report
  const handleGenerateReport = () => {
    if (!startDate || !endDate) {
      alert('Please select a date range.');
      return;
    }

    const newReport = {
      id: reports.length + 1,
      type: selectedReportType,
      date: new Date().toISOString().split('T')[0],
      generatedBy: 'Admin',
      status: 'Pending',
    };
    setReports([...reports, newReport]);
    alert(`${selectedReportType} for ${startDate} to ${endDate} generated successfully!`);
  };

  return (
    <div className="space-y-6 p-6">
      {/* Header */}
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-semibold text-gray-900">Reports</h1>
        <div className="flex space-x-4">
          <button
            onClick={handleGenerateReport}
            className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700"
          >
            Generate Report
          </button>
        </div>
      </div>

      {/* Filters */}
      <div className="bg-white p-6 rounded-lg shadow-md">
        <h2 className="text-xl font-semibold mb-4">Generate Report</h2>
        <div className="flex flex-col md:flex-row gap-4">
          <select
            value={selectedReportType}
            onChange={(e) => setSelectedReportType(e.target.value)}
            className="w-full md:w-1/3 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-600"
          >
            <option value="Sales Report">Sales Report</option>
            <option value="User Activity Report">User Activity Report</option>
            <option value="Product Performance Report">Product Performance Report</option>
          </select>
          <input
            type="date"
            value={startDate}
            onChange={(e) => setStartDate(e.target.value)}
            className="w-full md:w-1/3 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-600"
          />
          <input
            type="date"
            value={endDate}
            onChange={(e) => setEndDate(e.target.value)}
            className="w-full md:w-1/3 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-green-600"
          />
        </div>
      </div>

      {/* Generated Reports Table */}
      <div className="bg-white p-6 rounded-lg shadow-md">
        <h2 className="text-xl font-semibold mb-4">Generated Reports</h2>
        <TableContainer component={Paper}>
          <Table>
            <TableHead>
              <TableRow>
                <TableCell>Report Type</TableCell>
                <TableCell>Date Generated</TableCell>
                <TableCell>Generated By</TableCell>
                <TableCell>Status</TableCell>
              </TableRow>
            </TableHead>
            <TableBody>
              {reports.map((report) => (
                <TableRow key={report.id}>
                  <TableCell>{report.type}</TableCell>
                  <TableCell>{report.date}</TableCell>
                  <TableCell>{report.generatedBy}</TableCell>
                  <TableCell>
                    <span
                      className={`px-2 py-1 rounded text-sm ${
                        report.status === 'Completed'
                          ? 'bg-green-100 text-green-800'
                          : 'bg-yellow-100 text-yellow-800'
                      }`}
                    >
                      {report.status}
                    </span>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </TableContainer>
      </div>
    </div>
  );
}